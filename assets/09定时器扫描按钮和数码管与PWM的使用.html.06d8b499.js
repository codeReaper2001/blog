import{_ as e,r as o,c,a as n,b as p,w as t,F as l,d as s,e as u,o as r}from"./app.9f3d4d71.js";const i={},k=n("h1",{id:"\u5B9A\u65F6\u5668\u626B\u63CF\u6309\u94AE\u548C\u6570\u7801\u7BA1\u4E0Epwm\u7684\u4F7F\u7528",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u5B9A\u65F6\u5668\u626B\u63CF\u6309\u94AE\u548C\u6570\u7801\u7BA1\u4E0Epwm\u7684\u4F7F\u7528","aria-hidden":"true"},"#"),s(" \u5B9A\u65F6\u5668\u626B\u63CF\u6309\u94AE\u548C\u6570\u7801\u7BA1\u4E0EPWM\u7684\u4F7F\u7528")],-1),b={class:"table-of-contents"},m=s("\u4E00\u3001\u4F7F\u7528\u5B9A\u65F6\u5668\u626B\u63CF\u6309\u94AE\u548C\u6570\u7801\u7BA1"),d=s("1. \u4F7F\u7528\u5B9A\u65F6\u5668\u8FDB\u884C\u626B\u63CF\u7684\u7F18\u7531"),g=s("2. \u5B9A\u65F6\u5668\u626B\u63CF\u72EC\u7ACB\u6309\u94AE"),y=s("3. \u5B9A\u65F6\u5668\u626B\u63CF\u6570\u7801\u7BA1"),w=s("\u4E8C\u3001PWM\u7684\u4F7F\u7528"),h=s("1. PWM\u7B80\u4ECB"),_=s("2. LED\u547C\u5438\u706F"),f=s("3. \u6309\u94AE\u63A7\u5236LED\u4EAE\u5EA6\u548C\u7535\u673A\u8F6C\u901F"),x=u(`<h2 id="\u4E00\u3001\u4F7F\u7528\u5B9A\u65F6\u5668\u626B\u63CF\u6309\u94AE\u548C\u6570\u7801\u7BA1" tabindex="-1"><a class="header-anchor" href="#\u4E00\u3001\u4F7F\u7528\u5B9A\u65F6\u5668\u626B\u63CF\u6309\u94AE\u548C\u6570\u7801\u7BA1" aria-hidden="true">#</a> \u4E00\u3001\u4F7F\u7528\u5B9A\u65F6\u5668\u626B\u63CF\u6309\u94AE\u548C\u6570\u7801\u7BA1</h2><h3 id="_1-\u4F7F\u7528\u5B9A\u65F6\u5668\u8FDB\u884C\u626B\u63CF\u7684\u7F18\u7531" tabindex="-1"><a class="header-anchor" href="#_1-\u4F7F\u7528\u5B9A\u65F6\u5668\u8FDB\u884C\u626B\u63CF\u7684\u7F18\u7531" aria-hidden="true">#</a> 1. \u4F7F\u7528\u5B9A\u65F6\u5668\u8FDB\u884C\u626B\u63CF\u7684\u7F18\u7531</h3><p>\u4E4B\u524D\u626B\u63CF\u6309\u94AE\u548C\u6570\u7801\u7BA1\u90FD\u662F\u9700\u8981\u901A\u8FC7<strong>CPU\u4E3B\u5FAA\u73AF</strong>\u8FDB\u884C\u7684\uFF0C\u4F7F\u7528\u8FD9\u79CD\u65B9\u5F0F\u6709\u7740\u5F88\u5927\u7684\u5F0A\u7AEF\uFF0C<strong>(1)\u9996\u5148</strong>\u662F\u4F1A\u5360\u7528CPU\u7684\u8D44\u6E90\uFF0C\u5728\u626B\u63CF\u6309\u94AE\u548C\u6570\u7801\u7BA1\u65F6\u4F1A<strong>\u6D6A\u8D39\u4E00\u5B9A\u7684\u65F6\u95F4</strong>\uFF0C<strong>(2)\u5176\u6B21</strong>\u662F\u6211\u4EEC\u7684\u6309\u94AE\u68C0\u6D4B\u662F\u901A\u8FC7<strong>\u677E\u624B\u68C0\u6D4B</strong>\u8FDB\u884C\u7684\uFF0C\u5F53\u6211\u4EEC\u6309\u4E0B\u6309\u94AE\u8FD8\u6CA1\u6709\u677E\u5F00\u65F6\uFF0C\u7A0B\u5E8F\u5373\u4F1A\u8FDB\u5165<strong>\u957F\u65F6\u95F4\u7684</strong><code>while</code><strong>\u5FAA\u73AF</strong>\u4E2D\uFF0C\u65E0\u6CD5\u5B8C\u6210\u5176\u4ED6\u7684\u64CD\u4F5C\uFF0C\u5FC5\u987B\u8981\u677E\u624B\u540E\u624D\u80FD\u91CA\u653ECPU\u8D44\u6E90\u5B8C\u6210\u5176\u4ED6\u7684\u529F\u80FD\u3002\u56E0\u6B64\u4F7F\u7528\u5B9A\u65F6\u5668\u4EE3\u66FFCPU\u8FDB\u884C\u626B\u63CF\u548C\u68C0\u6D4B\u662F\u975E\u5E38\u5FC5\u8981\u7684\u3002</p><h3 id="_2-\u5B9A\u65F6\u5668\u626B\u63CF\u72EC\u7ACB\u6309\u94AE" tabindex="-1"><a class="header-anchor" href="#_2-\u5B9A\u65F6\u5668\u626B\u63CF\u72EC\u7ACB\u6309\u94AE" aria-hidden="true">#</a> 2. \u5B9A\u65F6\u5668\u626B\u63CF\u72EC\u7ACB\u6309\u94AE</h3><p>\u539F\u6765\u7684\u72EC\u7ACB\u6309\u94AE\u76F8\u5173\u4EE3\u7801\uFF1A</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token comment">// Button.c</span>
<span class="token keyword">unsigned</span> <span class="token keyword">int</span> <span class="token function">ButtonKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>P3_1 <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>       <span class="token punctuation">{</span>res <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token function">deley</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">while</span> <span class="token punctuation">(</span>P3_1 <span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">deley</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>P3_0 <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>res <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token function">deley</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">while</span> <span class="token punctuation">(</span>P3_0 <span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">deley</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>P3_2 <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>res <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span><span class="token function">deley</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">while</span> <span class="token punctuation">(</span>P3_2 <span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">deley</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>P3_3 <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>res <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span><span class="token function">deley</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">while</span> <span class="token punctuation">(</span>P3_3 <span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">deley</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>
    <span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u53EF\u4EE5\u53D1\u73B0\u6211\u4EEC\u4E4B\u524D\u9700\u8981\u4F7F\u7528<code>deley(20)</code>\u8FDB\u884C\u626D\u52A8\u6D88\u6296\uFF0C\u7136\u540E\u9700\u8981\u4F7F\u7528<code>while</code>\u5FAA\u73AF\u8FDB\u884C\u7B49\u5F85\u677E\u624B\uFF0C\u6700\u540E\u518D\u4F7F\u7528<code>deley(20)</code>\u8FDB\u884C\u677E\u624B\u6D88\u6296\uFF0C\u800C\u5728\u8FD9\u7B49\u5F85\u677E\u624B\u7684\u8FC7\u7A0B\u4E2D\uFF0C\u5176\u4ED6\u7684\u5668\u4EF6\u5982\u6570\u7801\u7BA1\u7B49\u90FD\u65E0\u6CD5\u6B63\u5E38\u8FD0\u884C\u4E86\uFF0C\u9020\u6210\u5F88\u5927\u7684\u4E0D\u4FBF\u3002</p><p>\u7136\u540E\u6211\u4EEC\u73B0\u5728\u7684\u60F3\u6CD5\u662F\uFF1A\u4F7F\u7528\u8BA1\u65F6\u5668\u6BCF\u9694<code>20ms</code>\u83B7\u53D6\u4E00\u6B21\u5F53\u524D\u6309\u94AE\u6240\u5728\u5BC4\u5B58\u5668<code>bit</code>\u7684\u72B6\u6001\uFF0C\u5982\u4E0B\u56FE\u6240\u793A</p><img src="https://codereaper-image-bed.oss-cn-shenzhen.aliyuncs.com/img/my-picture-bed/image-20210827211242213.png" alt="image-20210827211242213" style="zoom:80%;"><p>\u5F53\u53D1\u73B0<strong>\u5F53\u524D\u7535\u5E73\u4E3A1</strong>\uFF0C\u800C<strong>\u4E0A\u4E00\u6B21\u7535\u5E73\u4E3A0</strong>\u65F6\uFF0C\u5219<strong>\u5224\u65AD\u6309\u94AE\u6309\u52A8\u677E\u624B</strong>\uFF0C\u518D\u8FDB\u884C\u5176\u4ED6\u76F8\u5E94\u7684\u64CD\u4F5C\u3002</p><p>\u73B0\u5728\u6211\u4EEC\u5148\u53BB\u6389\u8FD9\u4E9B<code>deley</code>\u548C<code>while</code>\uFF1A</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">unsigned</span> <span class="token keyword">int</span> <span class="token function">Button_GetState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>P3_1 <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>       <span class="token punctuation">{</span> res <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>P3_0 <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> res <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>P3_2 <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> res <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>P3_3 <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> res <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u7136\u540E\u5B9A\u4E49\u4E00\u4E2A<code>Loop</code>\u51FD\u6570\u4F9B\u5916\u90E8\u5B9A\u65F6\u5668\u8C03\u7528\uFF0C\u5728<code>main.c</code>\u4E2D\u5B83\u662F\u8FD9\u6837\u7684\uFF1A</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token function">Timer0_Routine</span><span class="token punctuation">(</span><span class="token punctuation">)</span> interrupt <span class="token number">1</span> <span class="token punctuation">{</span>
    <span class="token keyword">static</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span> T0Count<span class="token punctuation">;</span>
    TL0 <span class="token operator">=</span> <span class="token number">0x18</span><span class="token punctuation">;</span>
    TH0 <span class="token operator">=</span> <span class="token number">0xFC</span><span class="token punctuation">;</span>
    T0Count<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>T0Count <span class="token operator">&gt;=</span> <span class="token number">20</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        T0Count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token function">Button_Loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>	<span class="token comment">// &lt;--\u5728\u8FD9\u91CC\u4E0D\u65AD\u8C03\u7528Button_Loop()\u51FD\u6570</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u5373\u6211\u4EEC\u4F7F\u7528\u5B9A\u65F6\u5668\u6BCF\u9694<code>20ms</code>\u5C31\u8C03\u7528\u4E00\u6B21\u72EC\u7ACB\u6309\u94AE\u6A21\u5757\u7684<code>Button_Loop()</code>\u51FD\u6570\uFF0C\u800C\u5728\u8FD9\u4E2A\u51FD\u6570\u4E2D\u6211\u4EEC\u901A\u8FC7<strong>\u5F53\u524D\u7535\u5E73\u548C\u4E0A\u4E00\u6B21\u7535\u5E73</strong>\u7684\u5173\u7CFB\u6765\u5224\u65AD\u662F\u54EA\u4E2A\u6309\u94AE\u6309\u4E0B\u5E76\u677E\u624B\uFF08\u5373<code>key.released</code>\uFF09\uFF1A</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token function">Button_Loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">static</span> <span class="token keyword">unsigned</span> <span class="token keyword">char</span> nowKey<span class="token punctuation">,</span> lastKey<span class="token punctuation">;</span>
    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    lastKey <span class="token operator">=</span> nowKey<span class="token punctuation">;</span>
    nowKey <span class="token operator">=</span> <span class="token function">Button_GetState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span><span class="token number">4</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5224\u65AD\u6309\u4E0B\u677E\u624B\uFF0C\u5982\u679C\u662F\u5219\u66F4\u65B0currentKey</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>nowKey <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> lastKey <span class="token operator">==</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            currentKey <span class="token operator">=</span> i<span class="token punctuation">;</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u7136\u540E\u6211\u4EEC\u8FD8\u9700\u8981\u7F16\u5199<strong>\u83B7\u53D6\u5F53\u524D\u677E\u624B\u7684key</strong>\u7684\u51FD\u6570\uFF1A</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">unsigned</span> <span class="token keyword">char</span> currentKey<span class="token punctuation">;</span>
<span class="token keyword">unsigned</span> <span class="token keyword">char</span> <span class="token function">Button_GetKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> tmp<span class="token punctuation">;</span>
    tmp <span class="token operator">=</span> currentKey<span class="token punctuation">;</span>
    currentKey <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> tmp<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u8FD9\u91CC\u4F7F\u7528<code>tmp</code>\u4E2D\u95F4\u53D8\u91CF\u662F\u4E3A\u4E86\u65B9\u4FBF\u7ED9<code>currentKey</code>\u91CD\u65B0\u7F6E\u96F6\u3002</p><p>\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528LED\u8FDB\u884C\u76F8\u5E94\u7684\u6D4B\u8BD5\uFF1A</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> key<span class="token punctuation">;</span>
    <span class="token function">Timer0_Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        key <span class="token operator">=</span> <span class="token function">Button_GetKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>key <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> P2_0 <span class="token operator">=</span> <span class="token operator">~</span>P2_0<span class="token punctuation">;</span> <span class="token punctuation">}</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>key <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> P2_1 <span class="token operator">=</span> <span class="token operator">~</span>P2_1<span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u6D4B\u8BD5\u7ED3\u679C\u662F\u6211\u4EEC\u70B9\u51FB\u7B2C\u4E00\u4E2A\u548C\u7B2C\u4E8C\u4E2A\u6309\u94AE\u53EF\u4EE5<strong>\u5206\u522B\u63A7\u5236</strong>\u7B2C\u4E00\u4E2A\u548C\u7B2C\u4E8C\u4E2A<code>LED</code>\u706F\u7684\u4EAE\u548C\u706D\u3002</p><p>\u6700\u540E\u4E3A\u4E86\u65B9\u4FBF\u5BA2\u6237\u7AEF\uFF08main.c\uFF09\u8C03\u7528\uFF0C\u4E3A\u72EC\u7ACB\u6309\u952E\u6A21\u5757\u6DFB\u52A0\u5B9A\u65F6\u5668\u8C03\u7528\u51FD\u6570<code>Button_Routine()</code>\uFF1A</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token function">Button_Routine</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">static</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span> btn_Count<span class="token punctuation">;</span>
    btn_Count<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>btn_Count <span class="token operator">&gt;=</span> <span class="token number">20</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        btn_Count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token function">Button_Loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u7136\u540E\u5728main.c\u4E2D\u7684\u5B9A\u65F6\u5668\u7A0B\u5E8F\u53EA\u9700\u8981\u7B80\u5355\u8C03\u7528\u5373\u53EF\uFF1A</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token function">Timer0_Routine</span><span class="token punctuation">(</span><span class="token punctuation">)</span> interrupt <span class="token number">1</span> <span class="token punctuation">{</span>
    TL0 <span class="token operator">=</span> <span class="token number">0x18</span><span class="token punctuation">;</span>
    TH0 <span class="token operator">=</span> <span class="token number">0xFC</span><span class="token punctuation">;</span>
    <span class="token function">Button_Routine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &lt;--</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="_3-\u5B9A\u65F6\u5668\u626B\u63CF\u6570\u7801\u7BA1" tabindex="-1"><a class="header-anchor" href="#_3-\u5B9A\u65F6\u5668\u626B\u63CF\u6570\u7801\u7BA1" aria-hidden="true">#</a> 3. \u5B9A\u65F6\u5668\u626B\u63CF\u6570\u7801\u7BA1</h3><p>\u539F\u6765\u7684\u6570\u7801\u7BA1\u6838\u5FC3\u4EE3\u7801\uFF1A</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token comment">// \u6BB5\u7801</span>
u8 code smgduan<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">{</span>
    <span class="token number">0x3f</span><span class="token punctuation">,</span> <span class="token number">0x06</span><span class="token punctuation">,</span> <span class="token number">0x5b</span><span class="token punctuation">,</span> <span class="token number">0x4f</span><span class="token punctuation">,</span> <span class="token number">0x66</span><span class="token punctuation">,</span> <span class="token number">0x6d</span><span class="token punctuation">,</span> <span class="token number">0x7d</span><span class="token punctuation">,</span> <span class="token number">0x07</span><span class="token punctuation">,</span>
    <span class="token number">0x7f</span><span class="token punctuation">,</span> <span class="token number">0x6f</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0x7c</span><span class="token punctuation">,</span> <span class="token number">0x39</span><span class="token punctuation">,</span> <span class="token number">0x5e</span><span class="token punctuation">,</span> <span class="token number">0x79</span><span class="token punctuation">,</span> <span class="token number">0x71</span>            
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// \u4F4D\u9009\uFF08\u4F4D\u4F7F\u80FD\uFF09</span>
<span class="token keyword">void</span> <span class="token function">enableIndexLED</span><span class="token punctuation">(</span>u8 index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    P2 <span class="token operator">=</span> P2 <span class="token operator">&amp;</span> <span class="token operator">~</span><span class="token punctuation">(</span><span class="token number">0x07</span> <span class="token operator">&lt;&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    P2 <span class="token operator">=</span> P2 <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token number">0x7</span> <span class="token operator">-</span> index<span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token number">2</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">displayOneNum</span><span class="token punctuation">(</span>u8 index<span class="token punctuation">,</span> u8 num<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4F4D\u9009</span>
    <span class="token function">enableIndexLED</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u6BB5\u9009</span>
    P0 <span class="token operator">=</span> smgduan<span class="token punctuation">[</span>num<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5EF6\u65F6</span>
    <span class="token function">deley</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u6BB5\u6E05\u96F6</span>
    P0 <span class="token operator">=</span> <span class="token number">0x00</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>\u7136\u540E\u6211\u4EEC\u8C03\u6362\u4E00\u4E0B\u5404\u4E2A\u64CD\u4F5C\u7684\u987A\u5E8F\uFF0C\u5E76\u79FB\u9664\u6389<code>deley</code>\uFF0C\u5C31\u5F97\u5230\u4E86\u5C55\u793A\u5355\u4E2A\u6570\u7801\u7BA1\u7684\u51FD\u6570\uFF1A</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token function">Nixie_DisplayOnePos</span><span class="token punctuation">(</span>u8 index<span class="token punctuation">,</span> u8 duanValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6BB5\u6E05\u96F6</span>
    P0 <span class="token operator">=</span> <span class="token number">0x00</span><span class="token punctuation">;</span>
    <span class="token comment">// \u4F4D\u9009</span>
    <span class="token function">Nixie_enableIndexLED</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u6BB5\u9009</span>
    P0 <span class="token operator">=</span> duanValue<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u7136\u540E\u6211\u4EEC\u9700\u8981\u505A\u7684\u548C\u6309\u94AE\u7684\u68C0\u6D4B\u4E00\u6837\uFF0C<strong>\u6BCF\u9694\u4E00\u6BB5\u65F6\u95F4\u8C03\u7528\u4E00\u6B21\u76F8\u5173\u7684\u51FD\u6570</strong>\uFF0C\u6211\u4EEC\u8FD9\u91CC\u8BBE\u8BA1<strong>\u6BCF\u8C03\u7528\u4E00\u6B21\u5C31\u5C55\u793A\u5176\u4E2D\u7684\u4E00\u4F4D</strong>\uFF1A\u4F8B\u5982\u7B2C\u4E00\u6B21\u5C55\u793A\u7B2C\u4E00\u4F4D\u6570\u5B57\uFF0C\u7B2C\u4E8C\u6B21\u5C55\u793A\u7B2C\u4E8C\u4F4D\u6570\u5B57...\u4EE5\u6B64\u7C7B\u63A8\u3002\u8FD9\u6837\u6211\u4EEC\u5C31\u53EF\u4EE5\u5B9E\u73B0\u5B9A\u65F6\u5668\u626B\u63CF\u6570\u7801\u7BA1\u4E86\u3002</p><p>\u800C\u81F3\u4E8E\u6BCF\u4F4D\u5E94\u8BE5\u5C55\u793A\u4EC0\u4E48\u6837\u7684\u5185\u5BB9\uFF0C\u6211\u4EEC\u4F7F\u7528\u4E00\u4E2A<strong>8\u4E2A\u5143\u7D20\u7684\u6570\u7EC4\u8FDB\u884C\u5B58\u50A8</strong>\uFF1A</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">NOT_DISPLAY</span> <span class="token expression"><span class="token number">0</span></span></span>
<span class="token comment">// \u7528\u4E8E\u7F13\u5B58\u663E\u793A\u7684\u5185\u5BB9</span>
<span class="token keyword">static</span> u16 Nixie_Buf<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>NOT_DISPLAY<span class="token punctuation">,</span> NOT_DISPLAY<span class="token punctuation">,</span> NOT_DISPLAY<span class="token punctuation">,</span> NOT_DISPLAY<span class="token punctuation">,</span>
                           NOT_DISPLAY<span class="token punctuation">,</span> NOT_DISPLAY<span class="token punctuation">,</span> NOT_DISPLAY<span class="token punctuation">,</span> NOT_DISPLAY<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u7136\u540E\u5728\u5FAA\u73AF\u8C03\u7528\u7684\u51FD\u6570\u4E2D\u5C06\u7F13\u5B58\u4E2D\u7684\u5185\u5BB9\u5C55\u793A\u51FA\u6765\uFF1A</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token function">Nixie_Loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">static</span> u8 curIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token function">Nixie_DisplayOnePos</span><span class="token punctuation">(</span>curIndex<span class="token punctuation">,</span> Nixie_Buf<span class="token punctuation">[</span>curIndex<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    curIndex<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>curIndex <span class="token operator">&gt;=</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        curIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u4E0E\u72EC\u7ACB\u6309\u952E\u6A21\u5757\u540C\u7406\uFF0C\u6211\u4EEC\u8BBE\u7F6E<strong>\u751F\u547D\u5468\u671F\u51FD\u6570</strong>\u65B9\u4FBF\u4E2D\u65AD\u7A0B\u5E8F\u7684\u8C03\u7528\uFF1A</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token function">Nixie_Routine</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">static</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span> nixie_Count<span class="token punctuation">;</span>
    nixie_Count<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>nixie_Count <span class="token operator">&gt;=</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        nixie_Count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token function">Nixie_Loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &lt;--\u6BCF\u96942\u4E2A\u5355\u4F4D\u65F6\u95F4\u8C03\u7528\u4E00\u6B21\uFF0C\u5F53\u524D\u5355\u4F4D\u65F6\u95F4\u4E3A1ms</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u800C\u5F53\u6211\u4EEC\u5E0C\u671B\u4FEE\u6539\u663E\u793A\u7684\u5185\u5BB9\uFF0C\u6211\u4EEC<strong>\u4FEE\u6539</strong><code>Nixie_Buf</code><strong>\u7F13\u5B58\u6570\u7EC4\u4E2D\u7684\u5185\u5BB9\u5373\u53EF</strong>\uFF0C\u6545\u6211\u4EEC\u5BF9\u5916\u66B4\u9732\u51E0\u4E2A\u51FD\u6570\u65B9\u4FBF\u5916\u90E8\u4F7F\u7528\uFF1A</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token comment">// \u76F4\u63A5\u4F7F\u7528\u6BB5\u7801\u8BBE\u7F6EBuffer\u4E2D\u7684\u5143\u7D20</span>
<span class="token keyword">void</span> <span class="token function">Nixie_SetBufWithDuan</span><span class="token punctuation">(</span>u8 index<span class="token punctuation">,</span> u8 duan<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    Nixie_Buf<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> duan<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u7F6E\u7A7A\u67D0\u5143\u7D20</span>
<span class="token keyword">void</span> <span class="token function">Nixie_SetBlank</span><span class="token punctuation">(</span>u8 index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">Nixie_SetBufWithDuan</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> NOT_DISPLAY<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u8BBE\u7F6E\u663E\u793A\u4E3A\u67D0\u6570\u5B57\uFF08\u5373\u8BBE\u7F6E\u67D0\u5143\u7D20\u7684\u503C\u4E3A\u6570\u5B57\u5BF9\u5E94\u7684\u6BB5\u7801\uFF09</span>
<span class="token keyword">void</span> <span class="token function">Nixie_SetBufWithNum</span><span class="token punctuation">(</span>u8 index<span class="token punctuation">,</span> u8 num<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">Nixie_SetBufWithDuan</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> smgduan<span class="token punctuation">[</span>num<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u5C55\u793A\u591A\u4F4D\u7684\u6570\u5B57</span>
<span class="token keyword">void</span> <span class="token function">Nixie_ShowNum</span><span class="token punctuation">(</span>u16 num<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    u8 i <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>num <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">Nixie_SetBufWithNum</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> num<span class="token punctuation">)</span><span class="token punctuation">;</span>
        i<span class="token operator">--</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>num<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">Nixie_SetBufWithNum</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> num <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        num <span class="token operator">/=</span> <span class="token number">10</span><span class="token punctuation">;</span>
        i<span class="token operator">--</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u6E05\u7A7A\u524D\u9762\u7684\u5185\u5BB9</span>
    i<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        i<span class="token operator">--</span><span class="token punctuation">;</span>
        <span class="token function">Nixie_SetBlank</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><p><code>main.c</code>\u4E2D\u8FDB\u884C\u6D4B\u8BD5\uFF1A</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> cnt <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token function">Timer0_Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">Nixie_ShowNum</span><span class="token punctuation">(</span>cnt<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">defaultDeley</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        cnt<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">Timer0_Routine</span><span class="token punctuation">(</span><span class="token punctuation">)</span> interrupt <span class="token number">1</span> <span class="token punctuation">{</span>
    TL0 <span class="token operator">=</span> <span class="token number">0x18</span><span class="token punctuation">;</span>
    TH0 <span class="token operator">=</span> <span class="token number">0xFC</span><span class="token punctuation">;</span>
    <span class="token function">Key_Routine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">Nixie_Routine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>\u8FD0\u884C\u7ED3\u679C\uFF1A\u6570\u7801\u7BA1\u5C55\u793A\u7684\u6570\u5B57\u4ECE<code>0</code>\u5F00\u59CB\u4E0D\u65AD\u9012\u589E\u3002</p><h2 id="\u4E8C\u3001pwm\u7684\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u3001pwm\u7684\u4F7F\u7528" aria-hidden="true">#</a> \u4E8C\u3001PWM\u7684\u4F7F\u7528</h2><h3 id="_1-pwm\u7B80\u4ECB" tabindex="-1"><a class="header-anchor" href="#_1-pwm\u7B80\u4ECB" aria-hidden="true">#</a> 1. PWM\u7B80\u4ECB</h3><ul><li><strong>PWM (Pulse Width Modulation)<strong>\u5373</strong>\u8109\u51B2\u5BBD\u5EA6\u8C03\u5236</strong>\uFF0C\u5728<strong>\u5177\u6709\u60EF\u6027\u7684\u7CFB\u7EDF</strong>\u4E2D\uFF0C\u53EF\u4EE5\u901A\u8FC7\u5BF9\u4E00\u7CFB\u5217\u8109\u51B2\u7684\u5BBD\u5EA6\u8FDB\u884C\u8C03\u5236\uFF0C\u6765<strong>\u7B49\u6548\u5730\u83B7\u5F97\u6240\u9700\u8981\u7684\u6A21\u62DF\u53C2\u91CF</strong>\uFF0C\u5E38\u5E94\u7528\u4E8E<strong>\u7535\u673A\u63A7\u901F</strong>\u3001<strong>\u5F00\u5173\u7535\u6E90</strong>\u7B49\u9886\u57DF</li><li>PWM\u91CD\u8981\u53C2\u6570: <ul><li>\u9891\u7387=1/T<sub>s</sub></li><li>\u5360\u7A7A\u6BD4= T<sub>on</sub>/T<sub>s</sub></li><li>\u7CBE\u5EA6=\u5360\u7A7A\u6BD4\u53D8\u5316\u6B65\u8DDD</li></ul></li></ul><img src="https://codereaper-image-bed.oss-cn-shenzhen.aliyuncs.com/img/my-picture-bed/image-20210831231814085.png" alt="image-20210831231814085" style="zoom:67%;"><p>\u4F8B\u5982\u6211\u4EEC\u5E0C\u671B\u7535\u673A\u4F7F\u7528<strong>\u76F8\u5BF9\u6700\u5927\u529F\u738750%\u7684\u529F\u7387</strong>\u8FDB\u884C\u65CB\u8F6C\uFF0C\u5219\u6211\u4EEC\u53EF\u4EE5<strong>\u8BBE\u7F6E</strong> T<sub>ON</sub>=T<sub>OFF</sub>\u8FBE\u5230\u8BE5\u6548\u679C\uFF0C\u5176\u4ED6\u7684\u529F\u7387\u4E5F\u662F\u4E00\u6837\u7684\u539F\u7406\u3002</p><h3 id="_2-led\u547C\u5438\u706F" tabindex="-1"><a class="header-anchor" href="#_2-led\u547C\u5438\u706F" aria-hidden="true">#</a> 2. LED\u547C\u5438\u706F</h3><p>\u6309\u7167\u6211\u4EEC\u4E0A\u9762\u5173\u4E8EPWM\u7684\u4ECB\u7ECD\uFF0C\u82E5\u6211\u4EEC\u5E0C\u671BLED\u4EE5\u4E00\u534A\u7684\u4EAE\u5EA6\u5DE5\u4F5C\uFF0C\u6211\u4EEC\u53EF\u4EE5\u7F16\u5199\u5982\u4E0B\u4EE3\u7801\uFF1A</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>sbit LED <span class="token operator">=</span> P2<span class="token operator">^</span><span class="token number">0</span><span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        LED <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        LED <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u82E5\u6211\u4EEC\u589E\u957FLED\u706D\u7684\u65F6\u95F4\uFF1A</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        LED <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        LED <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        LED <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        LED <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        LED <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        LED <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        LED <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        LED <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u6B64\u65F6\u6211\u4EEC\u4F1A\u53D1\u73B0LED\u7684\u4EAE\u5EA6<strong>\u53D8\u6697\u4E86\u8BB8\u591A</strong></p><p>\u8FD9\u9A8C\u8BC1\u4E86\u6211\u4EEC\u53EF\u4EE5\u901A\u8FC7<strong>\u6539\u53D8PWM\u5360\u7A7A\u6BD4</strong>\u6765<strong>\u63A7\u5236LED\u7684\u4EAE\u5EA6</strong>\u3002</p><h4 id="\u5B9E\u73B0\u4E00" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0\u4E00" aria-hidden="true">#</a> \u5B9E\u73B0\u4E00</h4><p>\u6309\u7167\u8FD9\u4E2A\u539F\u7406\uFF0C\u6211\u4EEC\u53EF\u4EE5\u8FD9\u6837\u5B9E\u73B0\u547C\u5438\u706F\uFF1A</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>sbit LED <span class="token operator">=</span> P2 <span class="token operator">^</span> <span class="token number">0</span><span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">LED_light</span><span class="token punctuation">(</span><span class="token keyword">int</span> brightness<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> times<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>times <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> times <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> times<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        LED <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token function">deley</span><span class="token punctuation">(</span>brightness<span class="token punctuation">)</span><span class="token punctuation">;</span>
        LED <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token function">deley</span><span class="token punctuation">(</span><span class="token number">100</span> <span class="token operator">-</span> brightness<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> brightness <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span>brightness <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> brightness <span class="token operator">&lt;=</span> <span class="token number">100</span><span class="token punctuation">;</span> brightness<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">LED_light</span><span class="token punctuation">(</span>brightness<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span>brightness <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span> brightness <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> brightness<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">LED_light</span><span class="token punctuation">(</span>brightness<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p>\u8FD0\u884C\u6548\u679C\uFF1A</p><img src="https://z3.ax1x.com/2021/09/01/hd7QXt.gif" alt="hd7QXt.gif" border="0"><h4 id="\u5B9E\u73B0\u4E8C" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0\u4E8C" aria-hidden="true">#</a> \u5B9E\u73B0\u4E8C</h4><p>\u6211\u4EEC\u8FD8\u53EF\u4EE5\u4F7F\u7528<strong>\u5B9A\u65F6\u5668</strong>\u6765\u5B9E\u73B0PWM</p><p>\u539F\u7406\u56FE\u5982\u4E0B\uFF1A</p><img src="https://codereaper-image-bed.oss-cn-shenzhen.aliyuncs.com/img/my-picture-bed/image-20210901001401973.png" alt="image-20210901001401973" style="zoom:80%;"><p>\u8BA1\u6570\u503C\u968F\u7740\u65F6\u95F4\u7684\u63A8\u79FB\u8FDB\u884C\u53D8\u5316\uFF0C\u5373\u6309\u7167\u4E0A\u56FE\u4E2D\u7684<strong>\u5148\u5300\u901F\u589E\u52A0\u5230\u6700\u5927\u503C\uFF0C\u7136\u540E\u518D\u8FD4\u56DE\u5230\u6700\u5C0F\u503C\u7EE7\u7EED\u5F00\u59CB\u9012\u589E</strong>\u3002\u7136\u540E\u901A\u8FC7<strong>\u5224\u65AD\u8BA1\u6570\u503C\u548C\u6BD4\u8F83\u503C\u7684\u5173\u7CFB\u6765\u8F93\u51FA0\u62161</strong>\uFF0C\u6700\u540E\u6211\u4EEC<strong>\u53EA\u9700\u8981\u8BBE\u7F6E\u6BD4\u8F83\u503C\u7684\u5927\u5C0F</strong>\u5373\u53EF\u8F7B\u677E<strong>\u8BBE\u7F6E\u5360\u7A7A\u6BD4</strong>\u4E86\u3002</p><p>\u5148\u8FDB\u884C\u5B9A\u65F6\u5668\u7684\u8BBE\u7F6E\uFF0C\u8FD9\u91CC\u9009\u53D6100\u03BCs\u4F5C\u4E3A\u5B9A\u65F6\u957F\u5EA6\uFF1A</p><img src="https://codereaper-image-bed.oss-cn-shenzhen.aliyuncs.com/img/my-picture-bed/image-20210901002241750.png" alt="image-20210901002241750" style="zoom:67%;"><p>\u7136\u540E\u6211\u4EEC\u5728<code>main.c</code>\u4E2D\u4E0D\u65AD<strong>\u5207\u6362\u5360\u7A7A\u6BD4\u7684\u503C</strong>\u5373\u53EF\u5B9E\u73B0\u547C\u5438\u706F\u6548\u679C\u4E86\uFF1A</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">unsigned</span> <span class="token keyword">char</span> counter<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> compare<span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">Timer0_Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u4E0D\u65AD\u4FEE\u6539\u6BD4\u8F83\u503C\u5207\u6362\u5360\u7A7A\u6BD4</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span>compare <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> compare <span class="token operator">&lt;=</span> <span class="token number">100</span><span class="token punctuation">;</span> compare<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">deley</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span>compare <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span> compare <span class="token operator">!=</span> <span class="token number">255</span><span class="token punctuation">;</span> compare<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">deley</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">Timer0_Routine</span><span class="token punctuation">(</span><span class="token punctuation">)</span> interrupt <span class="token number">1</span> <span class="token punctuation">{</span>
    TL0 <span class="token operator">=</span> <span class="token number">0x9C</span><span class="token punctuation">;</span>	<span class="token comment">//\u8BBE\u7F6E\u5B9A\u65F6\u521D\u503C</span>
    TH0 <span class="token operator">=</span> <span class="token number">0xFF</span><span class="token punctuation">;</span>	<span class="token comment">//\u8BBE\u7F6E\u5B9A\u65F6\u521D\u503C</span>

    counter<span class="token operator">++</span><span class="token punctuation">;</span>	  <span class="token comment">//\u8BA1\u6570\u5668\u81EA\u589E</span>
    counter<span class="token operator">%=</span><span class="token number">100</span><span class="token punctuation">;</span> <span class="token comment">//\u8FBE\u5230\u6700\u5927\u65F6\u6E05\u96F6</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>counter <span class="token operator">&lt;</span> compare<span class="token punctuation">)</span> <span class="token punctuation">{</span>	<span class="token comment">//\u8BA1\u6570\u5668\u5C0F\u4E8E\u6BD4\u8F83\u503C\u8F93\u51FA0</span>
        LED <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>			<span class="token comment">//\u8BA1\u6570\u5668\u5927\u4E8E\u7B49\u4E8E\u6BD4\u8F83\u503C\u8F93\u51FA1</span>
        LED <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><h3 id="_3-\u6309\u94AE\u63A7\u5236led\u4EAE\u5EA6\u548C\u7535\u673A\u8F6C\u901F" tabindex="-1"><a class="header-anchor" href="#_3-\u6309\u94AE\u63A7\u5236led\u4EAE\u5EA6\u548C\u7535\u673A\u8F6C\u901F" aria-hidden="true">#</a> 3. \u6309\u94AE\u63A7\u5236LED\u4EAE\u5EA6\u548C\u7535\u673A\u8F6C\u901F</h3><p>\u6309\u7167\u4E0A\u9762\u7684LED\u547C\u5438\u706F<strong>\u5B9E\u73B0\u4E8C</strong>\u7684\u539F\u7406\uFF0C\u52A0\u5165\u72EC\u7ACB\u6309\u952E\u6A21\u5757\u548CLED\u6570\u7801\u7BA1\u6A21\u5757\uFF0C\u6211\u4EEC\u5F88\u5BB9\u6613\u5C31\u53EF\u4EE5\u5B9E\u73B0\u5BF9LED\u4EAE\u5EA6\u8C03\u6574\u7684\u7A0B\u5E8F\uFF1A</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> key<span class="token punctuation">;</span>
    <span class="token function">Timer0_Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">Nixie_SetNum</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        key <span class="token operator">=</span> <span class="token function">Key</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">Nixie_SetNum</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                compare <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                compare <span class="token operator">=</span> <span class="token number">50</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                compare <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">Timer0_Routine</span><span class="token punctuation">(</span><span class="token punctuation">)</span> interrupt <span class="token number">1</span> <span class="token punctuation">{</span>
    TL0 <span class="token operator">=</span> <span class="token number">0x9C</span><span class="token punctuation">;</span><span class="token comment">//\u8BBE\u7F6E\u5B9A\u65F6\u521D\u503C</span>
    TH0 <span class="token operator">=</span> <span class="token number">0xFF</span><span class="token punctuation">;</span><span class="token comment">//\u8BBE\u7F6E\u5B9A\u65F6\u521D\u503C</span>

    <span class="token function">Key_Routine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">Nixie_Routine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    counter<span class="token operator">++</span><span class="token punctuation">;</span>
    counter <span class="token operator">%=</span> <span class="token number">100</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>counter <span class="token operator">&lt;</span> compare<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        LED <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        LED <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div><p>\u540C\u7406\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5BF9\u7535\u673A\u8FDB\u884C\u8C03\u901F\uFF1A</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>sbit Motor <span class="token operator">=</span> P1 <span class="token operator">^</span> <span class="token number">0</span><span class="token punctuation">;</span>

<span class="token keyword">unsigned</span> <span class="token keyword">char</span> counter <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> compare<span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> key<span class="token punctuation">,</span> speed <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token function">Timer0_Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">Nixie_SetNum</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> speed<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        key <span class="token operator">=</span> <span class="token function">Key</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                speed<span class="token operator">++</span><span class="token punctuation">;</span>
                speed<span class="token operator">%=</span><span class="token number">4</span><span class="token punctuation">;</span>
                <span class="token function">Nixie_SetNum</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> speed<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>speed <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>compare <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>speed <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> compare <span class="token operator">=</span> <span class="token number">50</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>speed <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> compare <span class="token operator">=</span> <span class="token number">70</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>speed <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> compare <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">Timer0_Routine</span><span class="token punctuation">(</span><span class="token punctuation">)</span> interrupt <span class="token number">1</span> <span class="token punctuation">{</span>
    TL0 <span class="token operator">=</span> <span class="token number">0x9C</span><span class="token punctuation">;</span><span class="token comment">//\u8BBE\u7F6E\u5B9A\u65F6\u521D\u503C</span>
    TH0 <span class="token operator">=</span> <span class="token number">0xFF</span><span class="token punctuation">;</span><span class="token comment">//\u8BBE\u7F6E\u5B9A\u65F6\u521D\u503C</span>

    <span class="token function">Key_Routine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">Nixie_Routine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    counter<span class="token operator">++</span><span class="token punctuation">;</span>
    counter <span class="token operator">%=</span> <span class="token number">100</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>counter <span class="token operator">&lt;</span> compare<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        Motor <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        Motor <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div><blockquote><p>tips\uFF1A\u7535\u673A\u8FDE\u63A5\u5728<code>P10</code>\u53E3\u548C<code>GND</code></p></blockquote>`,75);function v(L,P){const a=o("RouterLink");return r(),c(l,null,[k,n("nav",b,[n("ul",null,[n("li",null,[p(a,{to:"#\u4E00\u3001\u4F7F\u7528\u5B9A\u65F6\u5668\u626B\u63CF\u6309\u94AE\u548C\u6570\u7801\u7BA1"},{default:t(()=>[m]),_:1}),n("ul",null,[n("li",null,[p(a,{to:"#_1-\u4F7F\u7528\u5B9A\u65F6\u5668\u8FDB\u884C\u626B\u63CF\u7684\u7F18\u7531"},{default:t(()=>[d]),_:1})]),n("li",null,[p(a,{to:"#_2-\u5B9A\u65F6\u5668\u626B\u63CF\u72EC\u7ACB\u6309\u94AE"},{default:t(()=>[g]),_:1})]),n("li",null,[p(a,{to:"#_3-\u5B9A\u65F6\u5668\u626B\u63CF\u6570\u7801\u7BA1"},{default:t(()=>[y]),_:1})])])]),n("li",null,[p(a,{to:"#\u4E8C\u3001pwm\u7684\u4F7F\u7528"},{default:t(()=>[w]),_:1}),n("ul",null,[n("li",null,[p(a,{to:"#_1-pwm\u7B80\u4ECB"},{default:t(()=>[h]),_:1})]),n("li",null,[p(a,{to:"#_2-led\u547C\u5438\u706F"},{default:t(()=>[_]),_:1})]),n("li",null,[p(a,{to:"#_3-\u6309\u94AE\u63A7\u5236led\u4EAE\u5EA6\u548C\u7535\u673A\u8F6C\u901F"},{default:t(()=>[f]),_:1})])])])])]),x],64)}var N=e(i,[["render",v],["__file","09\u5B9A\u65F6\u5668\u626B\u63CF\u6309\u94AE\u548C\u6570\u7801\u7BA1\u4E0EPWM\u7684\u4F7F\u7528.html.vue"]]);export{N as default};
