import{_ as o,r as e,c as l,a as n,b as a,w as t,F as u,d as s,e as i,o as r}from"./app.9f3d4d71.js";const k={},d=n("h1",{id:"lambda\u8868\u8FBE\u5F0F-\u4E8C",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#lambda\u8868\u8FBE\u5F0F-\u4E8C","aria-hidden":"true"},"#"),s(" Lambda\u8868\u8FBE\u5F0F\uFF08\u4E8C\uFF09")],-1),m={class:"table-of-contents"},b=s("\u4E00\u3001Java8 \u5185\u7F6E\u7684\u56DB\u5927\u6838\u5FC3\u51FD\u6570\u5F0F\u63A5\u53E3"),g=s("1. \u6D88\u8D39\u578B\u63A5\u53E3 Consumer"),v=s("2. \u4F9B\u7ED9\u578B\u63A5\u53E3 Supplier"),h=s("3. \u51FD\u6570\u578B\u63A5\u53E3 Function"),f=s("4.\u65AD\u8A00\u578B\u63A5\u53E3 Predicate"),y=s("\u4E8C\u3001\u65B9\u6CD5\u5F15\u7528"),w=s("\u8BED\u6CD5\u683C\u5F0F"),_=s("\u4E09\u3001\u6784\u9020\u5668\u5F15\u7528"),j=i(`<h2 id="\u4E00\u3001java8-\u5185\u7F6E\u7684\u56DB\u5927\u6838\u5FC3\u51FD\u6570\u5F0F\u63A5\u53E3" tabindex="-1"><a class="header-anchor" href="#\u4E00\u3001java8-\u5185\u7F6E\u7684\u56DB\u5927\u6838\u5FC3\u51FD\u6570\u5F0F\u63A5\u53E3" aria-hidden="true">#</a> \u4E00\u3001Java8 \u5185\u7F6E\u7684\u56DB\u5927\u6838\u5FC3\u51FD\u6570\u5F0F\u63A5\u53E3</h2><p>\u4E4B\u524D\u6211\u4EEC\u4F7F\u7528Lambda\u8868\u8FBE\u5F0F\u4E4B\u524D\u90FD\u9700\u8981\u624B\u52A8\u5730\u53BB\u521B\u5EFA\u51FD\u6570\u5F0F\u7684\u63A5\u53E3\uFF0C\u4F46\u5176\u5B9E\u6211\u4EEC\u4E0D\u5FC5\u8FD9\u6837\u505A\uFF0C\u56E0\u4E3AJDK8\u5DF2\u7ECF\u4E3A\u6211\u4EEC\u63D0\u4F9B\u597D\u4E86\u56DB\u5927\u6838\u5FC3\u51FD\u6570\u5F0F\u63A5\u53E3\uFF0C\u5373\uFF1A <code>Consumer&lt;T&gt;</code>: \u6D88\u8D39\u578B\u63A5\u53E3</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">T</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><code>Supplier&lt;T&gt;</code>: \u4F9B\u7ED9\u578B\u63A5\u53E3</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">T</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><code>Function&lt;T, R&gt;</code>: \u51FD\u6570\u578B\u63A5\u53E3</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">R</span> <span class="token function">apply</span><span class="token punctuation">(</span><span class="token class-name">T</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><code>Predicate&lt;T&gt;</code>: \u65AD\u8A00\u578B\u63A5\u53E3</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">boolean</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token class-name">T</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_1-\u6D88\u8D39\u578B\u63A5\u53E3-consumer" tabindex="-1"><a class="header-anchor" href="#_1-\u6D88\u8D39\u578B\u63A5\u53E3-consumer" aria-hidden="true">#</a> 1. \u6D88\u8D39\u578B\u63A5\u53E3 Consumer</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@FunctionalInterface</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">T</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u5373\u5B9E\u73B0\u8BE5\u51FD\u6570\u5F0F\u63A5\u53E3\u65F6\u9700\u8981\u63D0\u4F9B\u4E00\u4E2A<code>\u5355\u4E2A\u53C2\u6570\u3001\u65E0\u8FD4\u56DE\u503C</code>\u7684Lambda\u8868\u8FBE\u5F0F\uFF0C\u5E94\u7528\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// Consumer&lt;T&gt;: \u6D88\u8D39\u578B\u63A5\u53E3</span>
<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">t1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">happy</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span> x <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u6BCF\u6B21\u6D88\u8D39\u91D1\u989D\uFF1A&quot;</span><span class="token operator">+</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">happy</span><span class="token punctuation">(</span><span class="token keyword">double</span> money<span class="token punctuation">,</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Double</span><span class="token punctuation">&gt;</span></span> consumer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    consumer<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span>money<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="_2-\u4F9B\u7ED9\u578B\u63A5\u53E3-supplier" tabindex="-1"><a class="header-anchor" href="#_2-\u4F9B\u7ED9\u578B\u63A5\u53E3-supplier" aria-hidden="true">#</a> 2. \u4F9B\u7ED9\u578B\u63A5\u53E3 Supplier</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@FunctionalInterface</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Supplier</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token class-name">T</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u5373\u5B9E\u73B0\u8BE5\u51FD\u6570\u5F0F\u63A5\u53E3\u65F6\u9700\u8981\u63D0\u4F9B\u4E00\u4E2A<code>\u65E0\u8F93\u5165\u53C2\u6570\u3001\u6709\u8FD4\u56DE\u503C</code>\u7684Lambda\u8868\u8FBE\u5F0F\uFF0C\u5E94\u7528\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u9700\u6C42\uFF1A\u4EA7\u751F\u6307\u5B9A\u4E2A\u6570\u6574\u6570\uFF0C\u5E76\u653E\u5165\u96C6\u5408\u4E2D</span>
<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">t2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> numList <span class="token operator">=</span> <span class="token function">getNumList</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>numList<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> <span class="token function">getNumList</span><span class="token punctuation">(</span><span class="token keyword">int</span> num<span class="token punctuation">,</span> <span class="token class-name">Supplier</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> supplier<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> num<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>supplier<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> list<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="_3-\u51FD\u6570\u578B\u63A5\u53E3-function" tabindex="-1"><a class="header-anchor" href="#_3-\u51FD\u6570\u578B\u63A5\u53E3-function" aria-hidden="true">#</a> 3. \u51FD\u6570\u578B\u63A5\u53E3 Function</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@FunctionalInterface</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">,</span> <span class="token class-name">R</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * Applies this function to the given argument.
     *
     * <span class="token keyword">@param</span> <span class="token parameter">t</span> the function argument
     * <span class="token keyword">@return</span> the function result
     */</span>
    <span class="token class-name">R</span> <span class="token function">apply</span><span class="token punctuation">(</span><span class="token class-name">T</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u5373\u5B9E\u73B0\u8BE5\u51FD\u6570\u5F0F\u63A5\u53E3\u65F6\u9700\u8981\u63D0\u4F9B\u4E00\u4E2A<code>\u5E26\u4E00\u4E2A\u8F93\u5165\u53C2\u6570\u3001\u6709\u8FD4\u56DE\u503C</code>\u7684Lambda\u8868\u8FBE\u5F0F\uFF0C\u5E94\u7528\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u9700\u6C42\uFF1A\u5904\u7406\u5B57\u7B26\u4E32</span>
<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">t3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> res <span class="token operator">=</span> <span class="token function">strHandler</span><span class="token punctuation">(</span><span class="token string">&quot;abcdefg&quot;</span><span class="token punctuation">,</span> s <span class="token operator">-&gt;</span> s<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">strHandler</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">,</span> <span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> function<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> res <span class="token operator">=</span> function<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="_4-\u65AD\u8A00\u578B\u63A5\u53E3-predicate" tabindex="-1"><a class="header-anchor" href="#_4-\u65AD\u8A00\u578B\u63A5\u53E3-predicate" aria-hidden="true">#</a> 4.\u65AD\u8A00\u578B\u63A5\u53E3 Predicate</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@FunctionalInterface</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Predicate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * <span class="token keyword">@param</span> <span class="token parameter">t</span> the input argument
     * <span class="token keyword">@return</span> <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token boolean">true</span></span></span><span class="token punctuation">}</span> if the input argument matches the predicate,
     * otherwise <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token boolean">false</span></span></span><span class="token punctuation">}</span>
     */</span>
    <span class="token keyword">boolean</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token class-name">T</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u5373\u5B9E\u73B0\u8BE5\u51FD\u6570\u5F0F\u63A5\u53E3\u65F6\u9700\u8981\u63D0\u4F9B\u4E00\u4E2A<code>\u5E26\u4E00\u4E2A\u8F93\u5165\u53C2\u6570\u3001\u8FD4\u56DE\u503C\u4E3Aboolean\u7C7B\u578B</code>\u7684Lambda\u8868\u8FBE\u5F0F\uFF0C\u5E94\u7528\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u9700\u6C42\uFF1A\u5C06\u6EE1\u8DB3\u6761\u4EF6\u7684\u5B57\u7B26\u4E32\uFF0C\u653E\u5165\u5230\u96C6\u5408\u4E2D</span>
<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">t4</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">&quot;Hello&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;atguigu&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lambda&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;www&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ok&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> res <span class="token operator">=</span> <span class="token function">filterStr</span><span class="token punctuation">(</span>list<span class="token punctuation">,</span> s <span class="token operator">-&gt;</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    res<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">filterStr</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list<span class="token punctuation">,</span> <span class="token class-name">Predicate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> predicate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> s <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>predicate<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            res<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h2 id="\u4E8C\u3001\u65B9\u6CD5\u5F15\u7528" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u3001\u65B9\u6CD5\u5F15\u7528" aria-hidden="true">#</a> \u4E8C\u3001\u65B9\u6CD5\u5F15\u7528</h2><p>\u82E5Lambda\u4F53\u4E2D\u7684\u5185\u5BB9<strong>\u6709\u65B9\u6CD5\u5DF2\u7ECF\u5B9E\u73B0\u4E86</strong>\uFF0C\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528<code>\u201C\u65B9\u6CD5\u5F15\u7528\u201D</code>\uFF08\u53EF\u4EE5\u7406\u89E3\u4E3A\u65B9\u6CD5\u5F15\u7528\u662FLambda\u8868\u8FBE\u5F0F\u7684\u53E6\u5916\u4E00\u79CD\u6807\u65B0\u5F62\u5F0F\uFF09</p><blockquote><p>\u76F8\u5F53\u4E8E\u53C2\u6570\u7167\u642C\u5230\u67D0\u4E2A\u65B9\u6CD5\u7684\u53C2\u6570\u5217\u8868\u4E2D\u7684\u4E00\u79CD\u7B80\u5199</p></blockquote><h3 id="\u8BED\u6CD5\u683C\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u8BED\u6CD5\u683C\u5F0F" aria-hidden="true">#</a> \u8BED\u6CD5\u683C\u5F0F</h3><h4 id="\u5BF9\u8C61-\u5B9E\u4F8B\u65B9\u6CD5\u540D" tabindex="-1"><a class="header-anchor" href="#\u5BF9\u8C61-\u5B9E\u4F8B\u65B9\u6CD5\u540D" aria-hidden="true">#</a> \u5BF9\u8C61::\u5B9E\u4F8B\u65B9\u6CD5\u540D</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u5BF9\u8C61::\u5B9E\u4F8B\u65B9\u6CD5\u540D</span>
<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">t1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> con <span class="token operator">=</span> s <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">PrintStream</span> ps <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">;</span>
    <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> con1 <span class="token operator">=</span> ps<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h4 id="\u7C7B-\u9759\u6001\u65B9\u6CD5\u540D" tabindex="-1"><a class="header-anchor" href="#\u7C7B-\u9759\u6001\u65B9\u6CD5\u540D" aria-hidden="true">#</a> \u7C7B::\u9759\u6001\u65B9\u6CD5\u540D</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code> <span class="token comment">//\u7C7B::\u9759\u6001\u65B9\u6CD5\u540D</span>
<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">t3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Comparator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> com <span class="token operator">=</span> <span class="token punctuation">(</span>o1<span class="token punctuation">,</span> o2<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">compare</span><span class="token punctuation">(</span>o1<span class="token punctuation">,</span> o2<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">Comparator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> com2 <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token operator">::</span><span class="token function">compareTo</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h4 id="\u7C7B-\u5B9E\u4F8B\u65B9\u6CD5\u540D" tabindex="-1"><a class="header-anchor" href="#\u7C7B-\u5B9E\u4F8B\u65B9\u6CD5\u540D" aria-hidden="true">#</a> \u7C7B::\u5B9E\u4F8B\u65B9\u6CD5\u540D</h4><p>\u82E5<code>Lambda\u8868\u8FBE\u5F0F</code>\u53C2\u6570\u5217\u8868\u4E2D\u7684<code>\u7B2C\u4E00\u4E2A\u53C2\u6570</code>\u662F\u5B9E\u4F8B\u65B9\u6CD5\u7684<code>\u8C03\u7528\u8005</code>\uFF0C<code>\u7B2C\u4E8C\u4E2A\u53C2\u6570</code>\u662F\u65B9\u6CD5\u7684<code>\u53C2\u6570</code>\u65F6\uFF0C\u53EF\u4EE5\u4F7F\u7528<code>ClassName::fuction</code></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u7C7B::\u5B9E\u4F8B\u65B9\u6CD5\u540D</span>
<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">t4</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">BiPredicate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> bp <span class="token operator">=</span> <span class="token punctuation">(</span>s<span class="token punctuation">,</span> s2<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> s<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>s2<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">BiPredicate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> bp2 <span class="token operator">=</span> <span class="token class-name">String</span><span class="token operator">::</span><span class="token function">equals</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="\u4E09\u3001\u6784\u9020\u5668\u5F15\u7528" tabindex="-1"><a class="header-anchor" href="#\u4E09\u3001\u6784\u9020\u5668\u5F15\u7528" aria-hidden="true">#</a> \u4E09\u3001\u6784\u9020\u5668\u5F15\u7528</h2><p>\u9700\u8981\u8C03\u7528\u7684\u6784\u9020\u5668\u7684\u53C2\u6570\u5217\u8868\u8981\u4E0E\u51FD\u6570\u5F0F\u63A5\u53E3\u4E2D\u62BD\u8C61\u65B9\u6CD5\u7684\u53C2\u6570\u5217\u8868\u4FDD\u6301\u4E00\u81F4</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u6784\u9020\u5668\u5F15\u7528\uFF0CClassName::new</span>
<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">t5</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Supplier</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Employee</span><span class="token punctuation">&gt;</span></span> sup <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Employee</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">Supplier</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Employee</span><span class="token punctuation">&gt;</span></span> sup2 <span class="token operator">=</span> <span class="token class-name">Employee</span><span class="token operator">::</span><span class="token keyword">new</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">t6</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Employee</span><span class="token punctuation">&gt;</span></span> fun <span class="token operator">=</span> x <span class="token operator">-&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Employee</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Employee</span><span class="token punctuation">&gt;</span></span> fun1 <span class="token operator">=</span> <span class="token class-name">Employee</span><span class="token operator">::</span><span class="token keyword">new</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div>`,39),x=s("\u4E0B\u4E00\u6B65\uFF1A"),S={href:"https://www.cnblogs.com/CodeReaper/p/15096871.html",target:"_blank",rel:"noopener noreferrer"},L=s("Java8 Stream API\u7684\u4F7F\u7528\uFF08\u4F01\u4E1A\u5F00\u53D1\u5E38\u7528\uFF09");function T(q,I){const p=e("RouterLink"),c=e("ExternalLinkIcon");return r(),l(u,null,[d,n("nav",m,[n("ul",null,[n("li",null,[a(p,{to:"#\u4E00\u3001java8-\u5185\u7F6E\u7684\u56DB\u5927\u6838\u5FC3\u51FD\u6570\u5F0F\u63A5\u53E3"},{default:t(()=>[b]),_:1}),n("ul",null,[n("li",null,[a(p,{to:"#_1-\u6D88\u8D39\u578B\u63A5\u53E3-consumer"},{default:t(()=>[g]),_:1})]),n("li",null,[a(p,{to:"#_2-\u4F9B\u7ED9\u578B\u63A5\u53E3-supplier"},{default:t(()=>[v]),_:1})]),n("li",null,[a(p,{to:"#_3-\u51FD\u6570\u578B\u63A5\u53E3-function"},{default:t(()=>[h]),_:1})]),n("li",null,[a(p,{to:"#_4-\u65AD\u8A00\u578B\u63A5\u53E3-predicate"},{default:t(()=>[f]),_:1})])])]),n("li",null,[a(p,{to:"#\u4E8C\u3001\u65B9\u6CD5\u5F15\u7528"},{default:t(()=>[y]),_:1}),n("ul",null,[n("li",null,[a(p,{to:"#\u8BED\u6CD5\u683C\u5F0F"},{default:t(()=>[w]),_:1})])])]),n("li",null,[a(p,{to:"#\u4E09\u3001\u6784\u9020\u5668\u5F15\u7528"},{default:t(()=>[_]),_:1})])])]),j,n("p",null,[x,n("a",S,[L,a(c)])])],64)}var F=o(k,[["render",T],["__file","Lambda\u8868\u8FBE\u5F0F\uFF08\u4E8C\uFF09.html.vue"]]);export{F as default};
