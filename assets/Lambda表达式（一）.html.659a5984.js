import{_ as e,r as o,c,a as n,b as p,w as t,F as l,d as s,e as u,o as i}from"./app.9f3d4d71.js";const k={},r=n("h1",{id:"lambda\u8868\u8FBE\u5F0F-\u4E00",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#lambda\u8868\u8FBE\u5F0F-\u4E00","aria-hidden":"true"},"#"),s(" Lambda\u8868\u8FBE\u5F0F\uFF08\u4E00\uFF09")],-1),m={class:"table-of-contents"},b=s("\u4E00\u3001\u5E94\u7528\u573A\u666F\u5F15\u5165"),d=s("\u4F18\u5316\u4E00\uFF1A\u4F7F\u7528\u7B56\u7565\u6A21\u5F0F"),g=s("\u4F18\u5316\u4E8C\uFF1A\u4F7F\u7528\u533F\u540D\u5185\u90E8\u7C7B"),y=s("\u4F18\u5316\u4E09\uFF1A\u4F7F\u7528Lambda\u8868\u8FBE\u5F0F"),v=s("\u4F18\u5316\u56DB\uFF1A\u4F7F\u7528Stream API"),f=s("\u4E8C\u3001Lambda\u8FD0\u7B97\u7B26\u548C\u5BF9\u5E94\u8BED\u6CD5"),w=s("\u8BED\u6CD5\u683C\u5F0F"),h=s("Lambda\u8868\u8FBE\u5F0F\u9700\u8981\u201C\u51FD\u6570\u5F0F\u63A5\u53E3\u201D\u7684\u652F\u6301"),j=s("\u4E09\u3001\u7B80\u5355\u5E94\u7528"),E=u(`<h2 id="\u4E00\u3001\u5E94\u7528\u573A\u666F\u5F15\u5165" tabindex="-1"><a class="header-anchor" href="#\u4E00\u3001\u5E94\u7528\u573A\u666F\u5F15\u5165" aria-hidden="true">#</a> \u4E00\u3001\u5E94\u7528\u573A\u666F\u5F15\u5165</h2><p>\u9996\u5148\u7F16\u5199\u5BF9\u5E94\u7684\u5B9E\u4F53\u7C7B\u6A21\u62DF\u5B9E\u9645\u4E1A\u52A1\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@NoArgsConstructor</span>
<span class="token annotation punctuation">@AllArgsConstructor</span>
<span class="token annotation punctuation">@ToString</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Employee</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> age<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">double</span> salary<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u5177\u4F53\u6570\u636E\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Employee</span><span class="token punctuation">&gt;</span></span> employees <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>
        <span class="token keyword">new</span> <span class="token class-name">Employee</span><span class="token punctuation">(</span><span class="token string">&quot;\u5F20\u4E09&quot;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">6999.9</span><span class="token punctuation">,</span> <span class="token class-name">Employee<span class="token punctuation">.</span>Status</span><span class="token punctuation">.</span>FREE<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token class-name">Employee</span><span class="token punctuation">(</span><span class="token string">&quot;\u674E\u56DB&quot;</span><span class="token punctuation">,</span> <span class="token number">38</span><span class="token punctuation">,</span> <span class="token number">3999.9</span><span class="token punctuation">,</span> <span class="token class-name">Employee<span class="token punctuation">.</span>Status</span><span class="token punctuation">.</span>BUSY<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token class-name">Employee</span><span class="token punctuation">(</span><span class="token string">&quot;\u738B\u4E94&quot;</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">5999.9</span><span class="token punctuation">,</span> <span class="token class-name">Employee<span class="token punctuation">.</span>Status</span><span class="token punctuation">.</span>VOCATION<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token class-name">Employee</span><span class="token punctuation">(</span><span class="token string">&quot;\u8D75\u516D&quot;</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token number">2999.9</span><span class="token punctuation">,</span> <span class="token class-name">Employee<span class="token punctuation">.</span>Status</span><span class="token punctuation">.</span>FREE<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token class-name">Employee</span><span class="token punctuation">(</span><span class="token string">&quot;\u7530\u4E03&quot;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">4999.9</span><span class="token punctuation">,</span> <span class="token class-name">Employee<span class="token punctuation">.</span>Status</span><span class="token punctuation">.</span>BUSY<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u6B64\u65F6\u6211\u4EEC\u9700\u8981\u5F97\u5230\u5E74\u9F84&gt;=35\u7684\u6240\u6709\u5458\u5DE5\uFF0C\u5219\u53EF\u4EE5\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Employee</span><span class="token punctuation">&gt;</span></span> <span class="token function">filterEmployees</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Employee</span><span class="token punctuation">&gt;</span></span> employees<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Employee</span><span class="token punctuation">&gt;</span></span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Employee</span> employee <span class="token operator">:</span> employees<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>employee<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;=</span><span class="token number">35</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            res<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>employee<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">t3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Employee</span><span class="token punctuation">&gt;</span></span> res <span class="token operator">=</span> <span class="token function">filterEmployees</span><span class="token punctuation">(</span>employees<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Employee</span> employee <span class="token operator">:</span> res<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>employee<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>\u4F46\u8FD9\u6837\u53EF\u6269\u5C55\u6027\u4E0D\u597D\uFF0C\u5F53\u6211\u4EEC\u9700\u8981\u66F4\u6539\u8FC7\u6EE4\u6761\u4EF6\u65F6\u5219\u9700\u8981\u65B0\u5199\u4E00\u4E2A\u8FC7\u6EE4\u51FD\u6570\uFF0C\u5176\u4E2D\u6709\u5F88\u591A\u76F8\u540C\u7684\u4EE3\u7801\u3002</p><h3 id="\u4F18\u5316\u4E00-\u4F7F\u7528\u7B56\u7565\u6A21\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u4F18\u5316\u4E00-\u4F7F\u7528\u7B56\u7565\u6A21\u5F0F" aria-hidden="true">#</a> \u4F18\u5316\u4E00\uFF1A\u4F7F\u7528\u7B56\u7565\u6A21\u5F0F</h3><p>\u5148\u7F16\u5199\u4E00\u4E2A\u8FC7\u6EE4\u7B56\u7565\u63A5\u53E3\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">MyPredicate</span><span class="token generics"><span class="token punctuation">&lt;</span>t<span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">boolean</span> <span class="token function">condition</span><span class="token punctuation">(</span><span class="token class-name">T</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u5BF9\u5E94\u7684\u7528\u4E8E\u8FC7\u6EE4\u5E74\u9F84\u7684\u5B9E\u73B0\u7C7B<code>FilterEmployeeByAge</code>\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FilterEmployeeByAge</span> <span class="token keyword">implements</span> <span class="token class-name">MyPredicate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Employee</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">condition</span><span class="token punctuation">(</span><span class="token class-name">Employee</span> employee<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> employee<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">35</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u7136\u540E\u518D\u7F16\u5199\u6839\u636E\u7B56\u7565\u8FDB\u884C\u8FC7\u6EE4\u7684\u51FD\u6570\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span>employee<span class="token punctuation">&gt;</span></span> <span class="token function">filterEmployees</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Employee</span><span class="token punctuation">&gt;</span></span> employees<span class="token punctuation">,</span> <span class="token class-name">MyPredicate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Employee</span><span class="token punctuation">&gt;</span></span> predicate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Employee</span><span class="token punctuation">&gt;</span></span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Employee</span> employee <span class="token operator">:</span> employees<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>predicate<span class="token punctuation">.</span><span class="token function">condition</span><span class="token punctuation">(</span>employee<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            res<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>employee<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u8FD9\u6837\u6211\u4EEC\u5373\u53EF\u6839\u636E\u4E0D\u540C\u7684\u7B56\u7565\u8FDB\u884C\u8FC7\u6EE4\u4E86\uFF0C\u5982\u6B64\u65F6\u6211\u4EEC\u5E0C\u671B\u5F97\u5230\u5E74\u9F84&gt;=35\u7684\u6240\u6709\u5458\u5DE5\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u7B56\u7565\u6A21\u5F0F</span>
<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">t4</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Employee</span><span class="token punctuation">&gt;</span></span> employees <span class="token operator">=</span> <span class="token function">filterEmployees</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>employees<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">FilterEmployeeByAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Employee</span> employee <span class="token operator">:</span> employees<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>employee<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u82E5\u6211\u4EEC\u5E0C\u671B\u8FDB\u884C\u6269\u5C55\uFF0C\u6B64\u65F6\u5E0C\u671B\u5F97\u5230\u5DE5\u8D44&gt;=3000\u7684\u6240\u6709\u5458\u5DE5\uFF0C\u5219\u53EF\u4EE5\u518D\u7F16\u5199\u4E00\u4E2A\u7B56\u7565\u5B9E\u73B0\u7C7B\uFF0C\u7136\u540E\u518D\u8FDB\u884C\u76F8\u5E94\u7684\u7B56\u7565\u9009\u62E9\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// FilterEmployeeBySalary.java</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FilterEmployeeBySalary</span> <span class="token keyword">implements</span> <span class="token class-name">MyPredicate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Employee</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">condition</span><span class="token punctuation">(</span><span class="token class-name">Employee</span> employee<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> employee<span class="token punctuation">.</span><span class="token function">getSalary</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">3000</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


<span class="token comment">// MyTest.java</span>
<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">t5</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Employee</span><span class="token punctuation">&gt;</span></span> employees <span class="token operator">=</span> <span class="token function">filterEmployees</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>employees<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">FilterEmployeeBySalary</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Employee</span> employee <span class="token operator">:</span> employees<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>employee<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>\u4F46\u901A\u8FC7\u8FD9\u79CD\u65B9\u6CD5\u8FD8\u662F\u6BD4\u8F83\u9EBB\u70E6\uFF0C\u6BCF\u5B9A\u4E49\u4E00\u79CD\u8FC7\u6EE4\u6761\u4EF6\u90FD\u9700\u8981\u65B0\u5EFA\u4E00\u4E2A\u7C7B\uFF0C\u8FD9\u65F6\u6211\u4EEC\u53EF\u4EE5\u8FDB\u4E00\u6B65\u4F18\u5316\u3002</p><h3 id="\u4F18\u5316\u4E8C-\u4F7F\u7528\u533F\u540D\u5185\u90E8\u7C7B" tabindex="-1"><a class="header-anchor" href="#\u4F18\u5316\u4E8C-\u4F7F\u7528\u533F\u540D\u5185\u90E8\u7C7B" aria-hidden="true">#</a> \u4F18\u5316\u4E8C\uFF1A\u4F7F\u7528\u533F\u540D\u5185\u90E8\u7C7B</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u533F\u540D\u5185\u90E8\u7C7B</span>
<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">t6</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Employee</span><span class="token punctuation">&gt;</span></span> employees <span class="token operator">=</span> <span class="token function">filterEmployees</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>employees<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">MyPredicate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Employee</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">condition</span><span class="token punctuation">(</span><span class="token class-name">Employee</span> employee<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> employee<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">40</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Employee</span> employee <span class="token operator">:</span> employees<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>employee<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u8FD9\u65F6\uFF0C\u6211\u4EEC\u9700\u8981\u4EC0\u4E48\u6837\u7684\u6761\u4EF6\u53EA\u9700\u8981\u5728<code>\u533F\u540D\u5185\u90E8\u7C7B</code>\u4E2D\u8FDB\u884C\u7F16\u5199\u5373\u53EF\uFF0C\u4E0D\u9700\u8981\u7F16\u5199\u65B0\u7684\u7C7B\uFF0C\u4F46\u533F\u540D\u5185\u90E8\u7C7B\u7684\u5F62\u5F0F\u8FD8\u662F\u663E\u5F97\u4E0D\u591F\u7B80\u6D01\uFF0C\u53EF\u8BFB\u6027\u4E0D\u591F\u9AD8\u3002</p><h3 id="\u4F18\u5316\u4E09-\u4F7F\u7528lambda\u8868\u8FBE\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u4F18\u5316\u4E09-\u4F7F\u7528lambda\u8868\u8FBE\u5F0F" aria-hidden="true">#</a> \u4F18\u5316\u4E09\uFF1A\u4F7F\u7528Lambda\u8868\u8FBE\u5F0F</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// lambda\u8868\u8FBE\u5F0F</span>
<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">t7</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Employee</span><span class="token punctuation">&gt;</span></span> employees <span class="token operator">=</span> <span class="token function">filterEmployees</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>employees<span class="token punctuation">,</span> employee <span class="token operator">-&gt;</span> employee<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    employees<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u53EF\u4EE5\u770B\u5230\u4EE3\u7801\u7B80\u6D01\u4E86\u5F88\u591A\uFF0C\u800C\u4E14\u53EF\u8BFB\u6027\u4E5F\u53D8\u9AD8\u4E86\u3002</p><h3 id="\u4F18\u5316\u56DB-\u4F7F\u7528stream-api" tabindex="-1"><a class="header-anchor" href="#\u4F18\u5316\u56DB-\u4F7F\u7528stream-api" aria-hidden="true">#</a> \u4F18\u5316\u56DB\uFF1A\u4F7F\u7528Stream API</h3><p>\u5728\u4E0A\u4E00\u6B65\u4F18\u5316\u4E2D\uFF0C\u6211\u4EEC\u4ECD\u9700\u624B\u52A8\u5B9A\u4E49\u8FC7\u6EE4\u4F7F\u7528\u7684\u63A5\u53E3\u548C\u81EA\u5B9A\u4E49\u7684\u8FC7\u6EE4\u51FD\u6570\uFF0C\u90A3\u4E48JDK\u4E2D\u6709\u6CA1\u6709\u76F4\u63A5\u53EF\u4EE5\u201C\u62FF\u6765\u201D\u7684\u5DE5\u5C40\u5462\uFF1FStream API\u5C31\u662FJDK\u4E2D\u63D0\u4F9B\u7684\u4E13\u95E8\u7528\u6765\u8FDB\u884C\u8FC7\u6EE4\u64CD\u4F5C\u7684\u5DE5\u5177\uFF0C\u4F7F\u7528\u65B9\u5F0F\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// Stream API</span>
<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">t8</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    employees<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>employee <span class="token operator">-&gt;</span> employee<span class="token punctuation">.</span><span class="token function">getSalary</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">3000</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;---------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5F97\u5230\u5176\u4E2D\u6240\u6709\u7684\u5B57\u6BB5</span>
    employees<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">Employee</span><span class="token operator">::</span><span class="token function">getName</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u8FD0\u884C\u7ED3\u679C\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Employee</span><span class="token punctuation">(</span>name<span class="token operator">=</span>\u674E\u56DB<span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">38</span><span class="token punctuation">,</span> salary<span class="token operator">=</span><span class="token number">3999.9</span><span class="token punctuation">)</span>
<span class="token class-name">Employee</span><span class="token punctuation">(</span>name<span class="token operator">=</span>\u738B\u4E94<span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">,</span> salary<span class="token operator">=</span><span class="token number">5999.9</span><span class="token punctuation">)</span>
<span class="token class-name">Employee</span><span class="token punctuation">(</span>name<span class="token operator">=</span>\u7530\u4E03<span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">,</span> salary<span class="token operator">=</span><span class="token number">4999.9</span><span class="token punctuation">)</span>
<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>
\u5F20\u4E09
\u674E\u56DB
\u738B\u4E94
\u8D75\u516D
\u7530\u4E03
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="\u4E8C\u3001lambda\u8FD0\u7B97\u7B26\u548C\u5BF9\u5E94\u8BED\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u3001lambda\u8FD0\u7B97\u7B26\u548C\u5BF9\u5E94\u8BED\u6CD5" aria-hidden="true">#</a> \u4E8C\u3001Lambda\u8FD0\u7B97\u7B26\u548C\u5BF9\u5E94\u8BED\u6CD5</h2><img src="https://codereaper-image-bed.oss-cn-shenzhen.aliyuncs.com/img/2489898-20210803230009954-681113283.png" alt="\u5728\u8FD9\u91CC\u63D2\u5165\u56FE\u7247\u63CF\u8FF0" style="zoom:80%;"><h3 id="\u8BED\u6CD5\u683C\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u8BED\u6CD5\u683C\u5F0F" aria-hidden="true">#</a> \u8BED\u6CD5\u683C\u5F0F</h3><p>\u8BED\u6CD5\u683C\u5F0F\u4E00\uFF1A\u65E0\u53C2\u6570\uFF0C\u65E0\u8FD4\u56DE\u503C <code>() -&gt; System.out.println(&quot;hello world&quot;);</code></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">t1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Runnable</span> r <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Hello world&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    r<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;-------------------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Runnable</span> r1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Hello Lambda&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    r1<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u8BED\u6CD5\u683C\u5F0F\u4E8C\uFF1A\u6709\u4E00\u4E2A\u53C2\u6570\uFF0C\u800C\u4E14\u65E0\u8FD4\u56DE\u503C <code>(x) -&gt; System.out.println(x);</code></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">t2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> con <span class="token operator">=</span> <span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
    con<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token string">&quot;\u6211\u5927\u5C1A\u7845\u8C37\u5A01\u6B66&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u8BED\u6CD5\u683C\u5F0F\u4E09\uFF1A\u82E5\u53EA\u6709\u4E00\u4E2A\u53C2\u6570\uFF0C\u5C0F\u62EC\u53F7\u53EF\u4EE5\u7701\u7565\u4E0D\u5199 <code>x -&gt; System.out.println(x);</code></p><p>\u8BED\u6CD5\u683C\u5F0F\u56DB\uFF1A\u6709\u4E24\u4E2A\u4EE5\u4E0A\u7684\u53C2\u6570\uFF0C\u6709\u8FD4\u56DE\u503C\uFF0C\u4E14Lambda\u4F53\u4E2D\u6709\u591A\u6761\u8BED\u53E5</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Comparator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> comparator1 <span class="token operator">=</span> <span class="token punctuation">(</span>o1<span class="token punctuation">,</span> o2<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u51FD\u6570\u5F0F\u63A5\u53E3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">compare</span><span class="token punctuation">(</span>o1<span class="token punctuation">,</span> o2<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">t3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// \u4F7F\u7528\u533F\u540D\u5185\u90E8\u7C7B</span>
    <span class="token class-name">Comparator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> comparator <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Comparator</span><span class="token generics"><span class="token punctuation">&lt;</span>integer<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">compare</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> o1<span class="token punctuation">,</span> <span class="token class-name">Integer</span> o2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">compare</span><span class="token punctuation">(</span>o1<span class="token punctuation">,</span> o2<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
	<span class="token comment">// \u4F7F\u7528Lambda\u8868\u8FBE\u5F0F</span>
    <span class="token class-name">Comparator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> comparator1 <span class="token operator">=</span> <span class="token punctuation">(</span>o1<span class="token punctuation">,</span> o2<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u51FD\u6570\u5F0F\u63A5\u53E3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">compare</span><span class="token punctuation">(</span>o1<span class="token punctuation">,</span> o2<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>\u8BED\u6CD5\u683C\u5F0F\u4E94\uFF1A\u82E5Lambda\u4F53\u4E2D\u53EA\u6709\u4E00\u6761\u8BED\u53E5\uFF0Creturn\u548C\u5927\u62EC\u53F7\u90FD\u53EF\u4EE5\u7701\u7565 <code>Comparator&lt;Integer&gt; comparator = (o1, o2) -&gt; o1 - o2; </code></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">t4</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Comparator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> comparator <span class="token operator">=</span> <span class="token punctuation">(</span>o1<span class="token punctuation">,</span> o2<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> o1 <span class="token operator">-</span> o2<span class="token punctuation">;</span>
    <span class="token keyword">int</span> compare <span class="token operator">=</span> comparator<span class="token punctuation">.</span><span class="token function">compare</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>compare<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u8BED\u6CD5\u683C\u5F0F\u516D\uFF1ALambda\u8868\u8FBE\u5F0F\u7684\u53C2\u6570\u5217\u8868\u7684\u6570\u636E\u7C7B\u578B\u53EF\u4EE5\u7701\u7565\u4E0D\u5199\uFF0C\u539F\uFF1A <code>Comparator&lt;Integer&gt; comparator = (Integer o1, Integer o2) -&gt; o1 - o2;</code></p><p>\u53E3\u8BC0\uFF1A \u5DE6\u53F3\u9047\u4E00\u62EC\u53F7\u7701 \u5DE6\u4FA7\u7C7B\u578B\u63A8\u65AD\u7701</p><h3 id="lambda\u8868\u8FBE\u5F0F\u9700\u8981-\u51FD\u6570\u5F0F\u63A5\u53E3-\u7684\u652F\u6301" tabindex="-1"><a class="header-anchor" href="#lambda\u8868\u8FBE\u5F0F\u9700\u8981-\u51FD\u6570\u5F0F\u63A5\u53E3-\u7684\u652F\u6301" aria-hidden="true">#</a> Lambda\u8868\u8FBE\u5F0F\u9700\u8981\u201C\u51FD\u6570\u5F0F\u63A5\u53E3\u201D\u7684\u652F\u6301</h3><p>\u51FD\u6570\u5F0F\u63A5\u53E3\uFF1A\u63A5\u53E3\u4E2D\u53EA\u6709\u4E00\u4E2A\u62BD\u8C61\u65B9\u6CD5\u7684\u63A5\u53E3\uFF0C\u53EF\u4EE5\u4F7F\u7528\u6CE8\u89E3<code>@FunctionalInterface</code>\u8FDB\u884C\u4FEE\u9970</p><h2 id="\u4E09\u3001\u7B80\u5355\u5E94\u7528" tabindex="-1"><a class="header-anchor" href="#\u4E09\u3001\u7B80\u5355\u5E94\u7528" aria-hidden="true">#</a> \u4E09\u3001\u7B80\u5355\u5E94\u7528</h2><p>1.\u8C03\u7528Collections.sort() \u65B9\u6CD5\uFF0C\u901A\u8FC7\u5B9A\u5236\u6392\u5E8F\u6BD4\u8F83\u4E24\u4E2AEmployee (\u5148\u6309\u5E74\u9F84\u6BD4,\u5E74\u9F84\u76F8\u540C\u6309Salary\u6BD4)\uFF0C\u4F7F\u7528Lambda\u4F5C\u4E3A\u53C2\u6570\u4F20\u9012\u3002</p><p>\u51C6\u5907\u6570\u636E\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Employee</span><span class="token punctuation">&gt;</span></span> employees <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>
     	<span class="token keyword">new</span> <span class="token class-name">Employee</span><span class="token punctuation">(</span><span class="token string">&quot;\u5F20\u4E09&quot;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">6999.9</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token class-name">Employee</span><span class="token punctuation">(</span><span class="token string">&quot;\u674E\u56DB&quot;</span><span class="token punctuation">,</span> <span class="token number">38</span><span class="token punctuation">,</span> <span class="token number">3999.9</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token class-name">Employee</span><span class="token punctuation">(</span><span class="token string">&quot;\u738B\u4E94&quot;</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">5999.9</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token class-name">Employee</span><span class="token punctuation">(</span><span class="token string">&quot;\u8D75\u516D&quot;</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token number">2999.9</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token class-name">Employee</span><span class="token punctuation">(</span><span class="token string">&quot;\u7530\u4E03&quot;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">4999.9</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u5BA2\u6237\u7AEF\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">t1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    employees<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span>o1<span class="token punctuation">,</span> o2<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>o1<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> o2<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">compare</span><span class="token punctuation">(</span>o1<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> o2<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token class-name">Double</span><span class="token punctuation">.</span><span class="token function">compare</span><span class="token punctuation">(</span>o1<span class="token punctuation">.</span><span class="token function">getSalary</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> o2<span class="token punctuation">.</span><span class="token function">getSalary</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    employees<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>2.\u2460\u58F0\u660E\u51FD\u6570\u5F0F\u63A5\u53E3\uFF0C\u63A5\u53E3\u4E2D\u58F0\u660E\u62BD\u8C61\u65B9\u6CD5\uFF0C<code>public String getValue(String str);</code> \u2461\u58F0\u660E\u7C7B<code>TestLambda</code> \uFF0C\u7C7B\u4E2D\u7F16\u5199\u65B9\u6CD5\u4F7F\u7528\u63A5\u53E3\u4F5C\u4E3A\u53C2\u6570\uFF0C\u5C06\u4E00\u4E2A\u5B57\u7B26\u4E32\u8F6C\u6362\u6210\u5927\u5199\uFF0C \u5E76\u4F5C\u4E3A\u65B9\u6CD5\u7684\u8FD4\u56DE\u503C\u3002</p><p><strong>\u51FD\u6570\u5F0F\u63A5\u53E3</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@FunctionalInterface</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">MyFunction</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getValue</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u5BA2\u6237\u7AEF\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">strHandler</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">,</span> <span class="token class-name">MyFunction</span> mf<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> mf<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> res <span class="token operator">=</span> <span class="token function">strHandler</span><span class="token punctuation">(</span><span class="token string">&quot;abcdefg&quot;</span><span class="token punctuation">,</span> str <span class="token operator">-&gt;</span> str<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>3.\u2460\u58F0\u660E\u4E00\u4E2A\u5E26\u4E24\u4E2A\u6CDB\u578B\u7684\u51FD\u6570\u5F0F\u63A5\u53E3\uFF0C\u6CDB\u578B\u7C7B\u578B\u4E3A<code>&lt;t,r&gt;</code> <code>T\u4E3A\u53C2\u6570\uFF0CR\u4E3A\u8FD4\u56DE\u503C</code>\u3002 \u2461\u63A5\u53E3\u4E2D\u58F0\u660E\u5BF9\u5E94\u62BD\u8C61\u65B9\u6CD5\u3002 \u2462\u5728TestLambda \u7C7B\u4E2D\u58F0\u660E\u65B9\u6CD5\uFF0C\u4F7F\u7528\u63A5\u53E3\u4F5C\u4E3A\u53C2\u6570\uFF0C\u8BA1\u7B97\u4E24\u4E2Along \u578B\u53C2\u6570\u7684\u548C\u3002 \u2463\u518D\u8BA1\u7B97\u4E24\u4E2Along \u578B\u53C2\u6570\u7684\u4E58\u79EF\u3002</p><p><strong>\u51FD\u6570\u5F0F\u63A5\u53E3</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@FunctionalInterface</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">MyFunction2</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">R</span> <span class="token function">getValue</span><span class="token punctuation">(</span><span class="token class-name">T</span> t1<span class="token punctuation">,</span> <span class="token class-name">T</span> t2<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u5BA2\u6237\u7AEF\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">op</span><span class="token punctuation">(</span><span class="token class-name">Long</span> l1<span class="token punctuation">,</span> <span class="token class-name">Long</span> l2<span class="token punctuation">,</span> <span class="token class-name">MyFunction2</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">,</span> <span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> mf<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>mf<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span>l1<span class="token punctuation">,</span> l2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">t3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">op</span><span class="token punctuation">(</span><span class="token number">100L</span><span class="token punctuation">,</span> <span class="token number">200L</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>t1<span class="token punctuation">,</span> t2<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> t1 <span class="token operator">+</span> t2<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">op</span><span class="token punctuation">(</span><span class="token number">100L</span><span class="token punctuation">,</span> <span class="token number">200L</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>t1<span class="token punctuation">,</span> t2<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> t1 <span class="token operator">*</span> t2<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>`,64);function _(S,L){const a=o("RouterLink");return i(),c(l,null,[r,n("nav",m,[n("ul",null,[n("li",null,[p(a,{to:"#\u4E00\u3001\u5E94\u7528\u573A\u666F\u5F15\u5165"},{default:t(()=>[b]),_:1}),n("ul",null,[n("li",null,[p(a,{to:"#\u4F18\u5316\u4E00-\u4F7F\u7528\u7B56\u7565\u6A21\u5F0F"},{default:t(()=>[d]),_:1})]),n("li",null,[p(a,{to:"#\u4F18\u5316\u4E8C-\u4F7F\u7528\u533F\u540D\u5185\u90E8\u7C7B"},{default:t(()=>[g]),_:1})]),n("li",null,[p(a,{to:"#\u4F18\u5316\u4E09-\u4F7F\u7528lambda\u8868\u8FBE\u5F0F"},{default:t(()=>[y]),_:1})]),n("li",null,[p(a,{to:"#\u4F18\u5316\u56DB-\u4F7F\u7528stream-api"},{default:t(()=>[v]),_:1})])])]),n("li",null,[p(a,{to:"#\u4E8C\u3001lambda\u8FD0\u7B97\u7B26\u548C\u5BF9\u5E94\u8BED\u6CD5"},{default:t(()=>[f]),_:1}),n("ul",null,[n("li",null,[p(a,{to:"#\u8BED\u6CD5\u683C\u5F0F"},{default:t(()=>[w]),_:1})]),n("li",null,[p(a,{to:"#lambda\u8868\u8FBE\u5F0F\u9700\u8981-\u51FD\u6570\u5F0F\u63A5\u53E3-\u7684\u652F\u6301"},{default:t(()=>[h]),_:1})])])]),n("li",null,[p(a,{to:"#\u4E09\u3001\u7B80\u5355\u5E94\u7528"},{default:t(()=>[j]),_:1})])])]),E],64)}var q=e(k,[["render",_],["__file","Lambda\u8868\u8FBE\u5F0F\uFF08\u4E00\uFF09.html.vue"]]);export{q as default};
